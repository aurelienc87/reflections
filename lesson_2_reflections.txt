What happens when you initialize a repository? Why do you need to do it?

A hidden directory is created, containing the working git files
It is necessary to create a repository in order to be able to keep track of changes

How is the staging area different from the working directory and the repository? What value do you think it offers?

the staging area only contains the files that will be commited, the working directory contains all the files
the repository contains the different commits
The staging area allows to commit only the files related to a single logical change, instead of all the modified files

How can you use the staging area to make sure you have one commit per logical change?

Just add the files linked to the logical change in the staging area and commit the changes when all the files related to this logical change are staged.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches can be helpful when trying experimental features or when making a different version from the one on the master branch. They can help by grouping all the commits related to such changes inside the same logical structure.

How do the diagrams help you visualize the branch structure?

The diagrams shows the relationships between the commits and their reachability
They also help to see the whole structure of the repository quickly

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The changes of both branches are added, it is represented that way in the diagram because the merge is a new commit with a parent from each branch

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Git's automatic merging makes the process of merging two branches quicker and less error-prone but it doesn't resolve all the possible conflicts


