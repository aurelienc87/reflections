How did viewing a diff between two versions of a file help you see the bug that was introduced?

- It shows the after/before change on a line
- It shows the context of the change
- It only displays parts of the file that changed

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- It can help undoing many changes at once

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
- Logical commits
- Add comments/author

Cons:
- Can forget to commit
- Commits can be either too small or too large

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because some files are related to each other (ex. code files) and a single logical change can require the modification of multiple files.
In Google Docs, the files are unlikely to be related to each other most of the time, so saving multiple files in one commit is less critical.

How can you use the commands git log and git diff to view the history of files?

git log can be used to list the commits, know what they were about, and get their id
git diff can be used to compare commits, and see where the changes occured

How might using version control make you more confident to make changes that could break something?

Version control allows to restore a previous working state
Version control allows to isolate the changes between different commits, making it easier to track the bug

